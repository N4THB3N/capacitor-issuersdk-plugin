{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAGjD,OAAO,EAUL,MAAM,EAEN,WAAW,GACZ,MAAM,eAAe,CAAC;AAEvB,MAAM,QAAQ,GAAG,cAAc,CAAkB,0BAA0B,EAAE;IAC3E,GAAG,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,qBAAqB,EAAE,CAAC;CACpE,CAAC,CAAC;AAEH,cAAc,eAAe,CAAC;AAE9B,wBAAwB;AACxB,OAAO,EACL,QAAQ,EAUR,WAAW,EAEX,MAAM,GACP,CAAC","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport type { IssuerGooglePay } from './definitions';\nimport {\n  IContainsToken,\n  IGooglePayToken,\n  IProvisionByEncryptedCard,\n  IProvisionByPushReceiptId,\n  IProvisionInfo,\n  IProvisioningResult,\n  IssuerGpApi,\n  ITokenizeGP,\n  IUserAddress,\n  Status,\n  DefaultErrorApi,\n  TokenStatus,\n} from './definitions';\n\nconst IssuerGP = registerPlugin<IssuerGooglePay>('CapacitorIssuerGooglePay', {\n  web: () => import('./web').then(m => new m.CapacitorIssuerSdkWeb()),\n});\n\nexport * from './definitions';\n\n/* interfaces & enums */\nexport {\n  IssuerGP,\n  IssuerGpApi,\n  IContainsToken,\n  IGooglePayToken,\n  IProvisioningResult,\n  IUserAddress,\n  IProvisionInfo,\n  IProvisionByEncryptedCard,\n  IProvisionByPushReceiptId,\n  ITokenizeGP,\n  TokenStatus,\n  DefaultErrorApi,\n  Status,\n};\n"]}