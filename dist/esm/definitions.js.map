{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,6BAAmB,CAAA;IACnB,6BAAmB,CAAA;AACrB,CAAC,EAHW,MAAM,KAAN,MAAM,QAGjB;AAsED,WAAW;AACX,MAAM,CAAN,IAAY,oBAIX;AAJD,WAAY,oBAAoB;IAC9B,qCAAa,CAAA;IACb,iDAAyB,CAAA;IACzB,qCAAa,CAAA;AACf,CAAC,EAJW,oBAAoB,KAApB,oBAAoB,QAI/B;AAED,MAAM,CAAN,IAAY,WAOX;AAPD,WAAY,WAAW;IACrB,sDAAuC,CAAA;IACvC,kCAAmB,CAAA;IACnB,sCAAuB,CAAA;IACvB,gCAAiB,CAAA;IACjB,0EAA2D,CAAA;IAC3D,0CAA2B,CAAA;AAC7B,CAAC,EAPW,WAAW,KAAX,WAAW,QAOtB;AAED,MAAM,CAAN,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,4BAAa,CAAA;IACb,wCAAyB,CAAA;IACzB,4BAAa,CAAA;AACf,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB","sourcesContent":["export enum Status {\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE',\n}\n\nexport interface IssuerGpApi<ResponseType> {\n  result: Status;\n  data: ResponseType;\n}\n\nexport interface DefaultErrorApi {\n  statusCode: string;\n  message: string;\n}\n\nexport interface IGooglePayToken {\n  tokenReferenceId: string;\n  issuerName: string;\n  physicalPanLast4: string;\n  tokenLast4: string;\n  tokenServiceProvider: TokenServiceProvider;\n  cardNetwork: CardNetwork;\n  tokenState: TokenStatus;\n  isDefaultToken: boolean;\n}\n\nexport interface IContainsToken {\n  cardNetwork: CardNetwork;\n  panLast4: string;\n  tokenServiceProvider: string;\n}\n\nexport interface IUserAddress {\n  address1: string;\n  address2: string;\n  countryCode: string;\n  city: string;\n  state: string;\n  name: string;\n  phoneNumber: string;\n  postalCode: string;\n}\n\nexport interface IProvisionByEncryptedCard {\n  encryptedCard: string;\n  instCode: string;\n  provisionInfo: IProvisionInfo;\n}\n\nexport interface IProvisionByPushReceiptId {\n  pushReceiptId: string;\n  instCode: string;\n  provisionInfo: IProvisionInfo;\n}\n\nexport interface IProvisionInfo {\n  tokenServiceProvider: TokenServiceProvider;\n  cardNetwork: CardNetwork;\n  displayName: string;\n  lastDigits: string;\n  userAddress: IUserAddress;\n}\n\nexport interface IProvisioningResult {\n  wasSuccessful: boolean;\n  tokenId?: string;\n}\n\nexport interface ITokenizeGP {\n  tokenReferenceId: string;\n  provisionInfo: IProvisionInfo;\n}\n\n/* enums */\nexport enum TokenServiceProvider {\n  AMEX = 'AMEX',\n  MASTERCARD = 'MASTERCARD',\n  VISA = 'VISA',\n}\n\nexport enum TokenStatus {\n  ID_AND_V_REQUIRED = 'ID_AND_V_REQUIRED',\n  PENDING = 'PENDING',\n  SUSPENDED = 'SUSPENDED',\n  ACTIVE = 'ACTIVE',\n  FELICA_PENDING_PROVISIONING = 'FELICA_PENDING_PROVISIONING',\n  UNTOKENIZED = 'UNTOKENIZED',\n}\n\nexport enum CardNetwork {\n  AMEX = 'AMEX',\n  MASTERCARD = 'MASTERCARD',\n  VISA = 'VISA',\n}\n\nexport interface IssuerGooglePay {\n  init(): Promise<IssuerGpApi<string | DefaultErrorApi>>;\n  isAvailable(): Promise<IssuerGpApi<boolean | DefaultErrorApi>>;\n  getTokens(): Promise<IssuerGpApi<IGooglePayToken | DefaultErrorApi>>;\n  containsToken(\n    params: IContainsToken,\n  ): Promise<IssuerGpApi<boolean | DefaultErrorApi>>;\n  tokenize(\n    params: ITokenizeGP,\n  ): Promise<IssuerGpApi<IProvisioningResult | DefaultErrorApi>>;\n\n  executeProvisioning(\n    params: IProvisionByPushReceiptId,\n  ): Promise<IssuerGpApi<IProvisioningResult | DefaultErrorApi>>;\n\n  executeProvisioningOfEncryptedCard(\n    params: IProvisionByEncryptedCard,\n  ): Promise<IssuerGpApi<IProvisioningResult | DefaultErrorApi>>;\n}\n"]}